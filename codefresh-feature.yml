version: '1.0'
steps:

  build_docker_image_notify_step:
    image: tutum/curl
    commands:
      - >-
        curl -d "{\"content\": \"building ${{CF_REPO_NAME}} ${{CF_BRANCH}}\n ${{CF_COMMIT_AUTHOR}}: ${{CF_COMMIT_MESSAGE}}\n ${{CF_BUILD_URL}}\", \"username\": \"CI\"}" -H 'Content-Type: application/json' -X POST ${{DISCORD_URL}}
    fail_fast: false

  build_docker_image_step:
    title: building docker image
    type: build
    image_name: dapp-shell-ci
    working_directory: ./
    dockerfile: Dockerfile.ci
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'

#  unit_test_notify_step:
#    image: tutum/curl
#    commands:
#      - >-
#        curl -d "{\"content\": \"running unit tests...\", \"username\": \"CI\"}" -H 'Content-Type: application/json' -X POST ${{DISCORD_URL}}
#    fail-fast: false

  unit_test_step:
    title: running unit tests
    image: ${{build_docker_image_step}}
    working_directory: IMAGE_WORK_DIR
    entry_point:
      - /bin/sh
      - /codefresh/volume/cf-generated/unit_test_script
    create_file:
      path: /codefresh/volume/cf-generated
      name: unit_test_script
      content: npm test
    on_success:
      metadata:
        set:
          - '${{build_docker_image_step.imageId}}':
              - CF_QUALITY: true
    on_fail:
      metadata:
        set:
          - '${{build_docker_image_step.imageId}}':
              - CF_QUALITY: false

#  integration_test_notify_step:
#    image: tutum/curl
#    commands:
#      - >-
#        curl -d "{\"content\": \"running integration tests...\", \"username\": \"CI\"}" -H 'Content-Type: application/json' -X POST ${{DISCORD_URL}}
#    fail-fast: false


  integration_test_step:
    title: running integration tests
    image: ${{build_docker_image_step}}
    environment:
      - PORT=3100
      - APP_PORT=3100
      - NODE_ENV=test
      - RPCUSER=test
      - RPCPASSWORD=test
      - RPCHOSTNAME=feature1.particl.xyz
      - MAINNET_PORT=52738
      - TESTNET_PORT=52935
      - APP_NAME=dapp-shell
      - APP_ENV=test
      - APP_HOST=http://dappshell
      - APP_URL_PREFIX=/api
      - LOG_LEVEL=debug
      - LOG_ADAPTER=winston
      - API_INFO_ENABLED=true
      - API_INFO_ROUTE=/info
      - CLI_ENABLED=true
      - CLI_ROUTE=/cli
      - SWAGGER_ENABLED=true
      - SWAGGER_ROUTE=/docs
      - SWAGGER_FILE=/src/api/swagger.json
      - MONITOR_ENABLED=true
      - MONITOR_ROUTE=/status
      - DB_CLIENT=sqlite3
      - DB_CONNECTION=/app/data/marketplace.db
      - DB_POOL_MIN=2
      - DB_POOL_MAX=20
      - DB_MIGRATION_DIR=/src/database/migrations
      - DB_MIGRATION_TABLE=version
      - DB_SEEDS_DIR=/src/database/seeds
      - DISCORD_URL=https://discordapp.com/api/webhooks/405329233720639488/dWkcjRhtGBfMJjV29158ZavOWMno7FXAPBEVuGDrVnGYI5rcRG_pMDPveaGhyUlGLbRR
    working_directory: IMAGE_WORK_DIR
    entry_point:
      - /bin/sh
      - /codefresh/volume/cf-generated/integration_test_script
    create_file:
      path: /codefresh/volume/cf-generated
      name: integration_test_script
      content: >-
        npm run test:integration:pretty
    on_success:
      metadata:
        set:
          - '${{build_docker_image_step.imageId}}':
              - CF_QUALITY: true
    on_fail:
      metadata:
        set:
          - '${{build_docker_image_step.imageId}}':
              - CF_QUALITY: false


  blackbox_test_step:
    type: composition
    title: running blackbox tests
    working_directory: ${{main_clone}}
    composition:
      version: '2'
      services:
        dappshell:
          image: ${{build_docker_image_step}}
          environment:
            - PORT=3100
            - APP_PORT=3100
            - NODE_ENV=test
            - RPCUSER=test
            - RPCPASSWORD=test
            - RPCHOSTNAME=feature1.particl.xyz
            - MAINNET_PORT=52738
            - TESTNET_PORT=52935
            - APP_NAME=dapp-shell
            - APP_ENV=test
            - APP_HOST=http://dappshell
            - APP_URL_PREFIX=/api
            - LOG_LEVEL=debug
            - LOG_ADAPTER=winston
            - API_INFO_ENABLED=true
            - API_INFO_ROUTE=/info
            - CLI_ENABLED=true
            - CLI_ROUTE=/cli
            - SWAGGER_ENABLED=true
            - SWAGGER_ROUTE=/docs
            - SWAGGER_FILE=/src/api/swagger.json
            - MONITOR_ENABLED=true
            - MONITOR_ROUTE=/status
            - DB_CLIENT=sqlite3
            - DB_CONNECTION=/app/data/marketplace.db
            - DB_POOL_MIN=2
            - DB_POOL_MAX=20
            - DB_MIGRATION_DIR=/src/database/migrations
            - DB_MIGRATION_TABLE=version
            - DB_SEEDS_DIR=/src/database/seeds
            - DISCORD_URL=https://discordapp.com/api/webhooks/405329233720639488/dWkcjRhtGBfMJjV29158ZavOWMno7FXAPBEVuGDrVnGYI5rcRG_pMDPveaGhyUlGLbRR
    composition_candidates:
      test_service:
        image: ${{build_docker_image_step}}
        command: bin/ci-blackbox-tests.sh
        working_dir: /app
        environment:
          - PORT=3100
          - APP_PORT=3100
          - NODE_ENV=test
          - RPCUSER=test
          - RPCPASSWORD=test
          - RPCHOSTNAME=feature1.particl.xyz
          - MAINNET_PORT=52738
          - TESTNET_PORT=52935
          - APP_NAME=dapp-shell
          - APP_ENV=test
          - APP_HOST=http://dappshell
          - APP_URL_PREFIX=/api
          - LOG_LEVEL=debug
          - LOG_ADAPTER=winston
          - API_INFO_ENABLED=true
          - API_INFO_ROUTE=/info
          - CLI_ENABLED=true
          - CLI_ROUTE=/cli
          - SWAGGER_ENABLED=true
          - SWAGGER_ROUTE=/docs
          - SWAGGER_FILE=/src/api/swagger.json
          - MONITOR_ENABLED=true
          - MONITOR_ROUTE=/status
          - DB_CLIENT=sqlite3
          - DB_CONNECTION=/app/data/marketplace.db
          - DB_POOL_MIN=2
          - DB_POOL_MAX=20
          - DB_MIGRATION_DIR=/src/database/migrations
          - DB_MIGRATION_TABLE=version
          - DB_SEEDS_DIR=/src/database/seeds
          - DISCORD_URL=https://discordapp.com/api/webhooks/405329233720639488/dWkcjRhtGBfMJjV29158ZavOWMno7FXAPBEVuGDrVnGYI5rcRG_pMDPveaGhyUlGLbRR
    on_success:
      metadata:
        set:
          - '${{build_docker_image_step.imageId}}':
              - CF_QUALITY: true
    on_fail:
      metadata:
        set:
          - '${{build_docker_image_step.imageId}}':
              - CF_QUALITY: false

#  push_image_notify_step:
#    image: tutum/curl
#    commands:
#      - >-
#        curl -d "{\"content\": \"pushing image to docker.io/ludx/dapp-shell:${{CF_SHORT_REVISION}}\", \"username\": \"CI\"}" -H 'Content-Type: application/json' -X POST ${{DISCORD_URL}}
#    fail-fast: false

#  push_image_step:
#    type: push
#    candidate: ${{build_docker_image_step}}
#    image_name: ludx/dapp-shell-ci
#    tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
#    registry: dockerhub
#    credentials:
#      username: ${{DOCKERHUB_USERNAME}}
#      password: ${{DOCKERHUB_PASSWORD}}
#    fail-fast: false

#  push_image_step_dockerhub:
#    type: push
#    candidate: ${{build_docker_image_step}}
#    image_name: ludx/dapp-shell-ci
#    tag: latest
#    registry: dockerhub
#    fail-fast: false

  push_image_step_codefresh:
    type: push
    candidate: ${{build_docker_image_step}}
    image_name: dapp-shell-ci
    tag: latest
    registry: cfcr
    fail-fast: false

  deploy_step:
    title: deploying image to kontena
    image: r.cfcr.io/ludx/codefresh-custom-runner:latest
    working_directory: IMAGE_WORK_DIR
    entry_point:
      - /bin/sh
      - /codefresh/volume/cf-generated/deploy_script
    create_file:
      path: /codefresh/volume/cf-generated
      name: deploy_script
      content: >-
        ./kontena-stack-upgrade.sh ruth-master gridsteri dappshellfeature-stack git@github.com:particl/dapp-shell.git ${{CF_BRANCH}} kontena-feature.yml
#    environment:
#      - MASTER_NAME=xxx
#      - GRID_NAME=xxx
#      - STACK_NAME=xxx
#      - GIT_REPOSITORY=xxx
#      - BRANCH_NAME=xxx
#      - CONFIG_FILE=xxx

  build_and_deploy_finished_notify_step:
    image: tutum/curl
    commands:
      - >-
        curl -d "{\"content\": \"Build finished and image deployed. http://feature1.particl.xyz/cli\", \"username\": \"CI\"}" -H 'Content-Type: application/json' -X POST ${{DISCORD_URL}}
    fail-fast: false
